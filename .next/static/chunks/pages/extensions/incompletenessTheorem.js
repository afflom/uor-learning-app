/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/extensions/incompletenessTheorem"],{

/***/ "(pages-dir-browser)/./node_modules/.pnpm/next@15.3.1_@playwright+test@1.52.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fworkspaces%2Ffluffy-octo-bassoon%2Fpages%2Fextensions%2FincompletenessTheorem.mdx&page=%2Fextensions%2FincompletenessTheorem!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.3.1_@playwright+test@1.52.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fworkspaces%2Ffluffy-octo-bassoon%2Fpages%2Fextensions%2FincompletenessTheorem.mdx&page=%2Fextensions%2FincompletenessTheorem! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/extensions/incompletenessTheorem\",\n      function () {\n        return __webpack_require__(/*! ./pages/extensions/incompletenessTheorem.mdx */ \"(pages-dir-browser)/./pages/extensions/incompletenessTheorem.mdx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/extensions/incompletenessTheorem\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE1LjMuMV9AcGxheXdyaWdodCt0ZXN0QDEuNTIuMF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtY2xpZW50LXBhZ2VzLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPSUyRndvcmtzcGFjZXMlMkZmbHVmZnktb2N0by1iYXNzb29uJTJGcGFnZXMlMkZleHRlbnNpb25zJTJGaW5jb21wbGV0ZW5lc3NUaGVvcmVtLm1keCZwYWdlPSUyRmV4dGVuc2lvbnMlMkZpbmNvbXBsZXRlbmVzc1RoZW9yZW0hIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsc0hBQThDO0FBQ3JFO0FBQ0E7QUFDQSxPQUFPLElBQVU7QUFDakIsTUFBTSxVQUFVO0FBQ2hCO0FBQ0EsT0FBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL2V4dGVuc2lvbnMvaW5jb21wbGV0ZW5lc3NUaGVvcmVtXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9wYWdlcy9leHRlbnNpb25zL2luY29tcGxldGVuZXNzVGhlb3JlbS5tZHhcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL2V4dGVuc2lvbnMvaW5jb21wbGV0ZW5lc3NUaGVvcmVtXCJdKVxuICAgICAgfSk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/.pnpm/next@15.3.1_@playwright+test@1.52.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fworkspaces%2Ffluffy-octo-bassoon%2Fpages%2Fextensions%2FincompletenessTheorem.mdx&page=%2Fextensions%2FincompletenessTheorem!\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/extensions/incompletenessTheorem.mdx":
/*!****************************************************!*\
  !*** ./pages/extensions/incompletenessTheorem.mdx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mdx-js/react */ \"(pages-dir-browser)/./node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@19.1.2_react@19.1.0/node_modules/@mdx-js/react/index.js\");\n\n\nconst metadata = {\n    title: \"Gödel's Incompleteness Theorem\"\n};\nfunction _createMdxContent(props) {\n    const _components = {\n        h1: \"h1\",\n        h2: \"h2\",\n        p: \"p\",\n        ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n        ...props.components\n    };\n    return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h1, {\n                children: \"Gödel's Incompleteness Theorem\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 5,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"We present the formal arithmetization of syntax using prime-coordinate encoding (a special case of the UOR map) and derive Gödel's First and Second Incompleteness Theorems for any consistent, effectively axiomatizable theory extending a minimal arithmetic.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 7,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"1. Arithmetization via Prime Encoding\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 9,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Let L be the first-order language of arithmetic with a finite alphabet of symbols. Fix an effective Gödel coding that assigns to each symbol a unique natural number. Extend this to finite strings using the prime formula:\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 11,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"For a string s₁s₂...sₙ, encode it as a product of powers of successive primes, where the exponents are the codes for each symbol.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 13,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"By unique factorization, each string has a unique code in the natural numbers. More generally, any finite sequence of syntactic objects can be encoded unambiguously.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 15,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"2. Provability Predicate\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 17,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Let T be a consistent, recursively axiomatizable theory. Define a binary predicate that checks if a given sequence is a valid proof of a formula in the theory.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 19,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"The provability predicate expresses that a given formula is provable in T.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 21,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"3. Diagonal Lemma\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 23,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"For any formula with one free variable, there exists a sentence G that asserts about itself that it has the property expressed by the formula.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 25,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"This follows from the diagonalization (fixed-point) construction using the uniqueness of prime encoding and the representability of primitive recursive functions in T.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 27,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"4. First Incompleteness Theorem\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 29,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Instantiating the diagonal lemma with the negation of the provability predicate yields a sentence G that essentially says \\\"I am not provable in T.\\\"\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 31,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"If T is consistent, T cannot prove G (else it would be inconsistent). Also T cannot prove ¬G (which would contradict G's unprovability). Thus G is independent of T, proving its essential incompleteness.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 33,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"5. Second Incompleteness Theorem\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 35,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Define the consistency statement for theory T as \\\"There is no proof of a contradiction in T.\\\"\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 37,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"If T could prove its own consistency, then by internalizing the argument from the First Incompleteness Theorem, T would prove that the unprovable sentence G is unprovable, contradicting the First Incompleteness Theorem. Hence, if T is consistent, it cannot prove its own consistency.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 39,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"6. Transcendence via UOR\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 41,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Within the Prime Framework, each syntactic object and proof sequence is assigned a unique prime-coordinate spectrum via the UOR map. Gödel's construction exhibits that no finite, coherent bundle of axioms can capture the full intrinsic spectrum of its own provability relation. The unprovable sentence G is a prime-spectrum signature that transcends the axiomatic bundle of T, illustrating the inherent limits of trilateral coherence when self-reference is admitted.\"\n            }, undefined, false, {\n                fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n                lineNumber: 43,\n                columnNumber: 1\n            }, this)\n        ]\n    }, undefined, true, {\n        fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\",\n        lineNumber: 1,\n        columnNumber: 1\n    }, this);\n}\nfunction MDXContent() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { wrapper: MDXLayout } = {\n        ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n        ...props.components\n    };\n    return MDXLayout ? (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MDXLayout, {\n        ...props,\n        children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_createMdxContent, {\n            ...props\n        }, undefined, false, {\n            fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\"\n        }, this)\n    }, undefined, false, {\n        fileName: \"/workspaces/fluffy-octo-bassoon/pages/extensions/incompletenessTheorem.mdx\"\n    }, this) : _createMdxContent(props);\n}\n_c = MDXContent;\nvar _c;\n$RefreshReg$(_c, \"MDXContent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3BhZ2VzL2V4dGVuc2lvbnMvaW5jb21wbGV0ZW5lc3NUaGVvcmVtLm1keCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O01BQWFBLFdBQUFBO0lBQ1hDLE9BQU87Ozs7Ozs7Ozs7Ozs7MEJBR1A7Ozs7Ozs7OzBCQUVGOzs7Ozs7OzswQkFFRzs7Ozs7Ozs7MEJBRUg7Ozs7Ozs7OzBCQUVBOzs7Ozs7OzswQkFFQTs7Ozs7Ozs7MEJBRUc7Ozs7Ozs7OzBCQUVIOzs7Ozs7OzswQkFFQTs7Ozs7Ozs7MEJBRUc7Ozs7Ozs7OzBCQUVIOzs7Ozs7OzswQkFFQTs7Ozs7Ozs7MEJBRUc7Ozs7Ozs7OzBCQUVIOzs7Ozs7OzswQkFFQTs7Ozs7Ozs7MEJBRUc7Ozs7Ozs7OzBCQUVIOzs7Ozs7OzswQkFFQTs7Ozs7Ozs7MEJBRUc7Ozs7Ozs7OzBCQUVIIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9mbHVmZnktb2N0by1iYXNzb29uL3BhZ2VzL2V4dGVuc2lvbnMvaW5jb21wbGV0ZW5lc3NUaGVvcmVtLm1keCJdLCJuYW1lcyI6WyJtZXRhZGF0YSIsInRpdGxlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/extensions/incompletenessTheorem.mdx\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["pages/_app","main"], () => (__webpack_exec__("(pages-dir-browser)/./node_modules/.pnpm/next@15.3.1_@playwright+test@1.52.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fworkspaces%2Ffluffy-octo-bassoon%2Fpages%2Fextensions%2FincompletenessTheorem.mdx&page=%2Fextensions%2FincompletenessTheorem!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);